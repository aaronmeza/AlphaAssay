apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata: { name: kube-prometheus-stack, namespace: observability }
spec:
  interval: 10m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "57.*"
      sourceRef: { kind: HelmRepository, name: prometheus-community, namespace: flux-system }
  values:
    grafana:
      additionalDataSources:
        - name: Loki
          type: loki
          access: proxy
          url: http://loki-stack.observability.svc.cluster.local:3100           
          isDefault: false
      adminPassword: prom-operator
      persistence: { enabled: true, size: 5Gi, storageClassName: local-path }
      securityContext: { runAsUser: 472, runAsGroup: 472, fsGroup: 472 }
      resources:
        requests: { cpu: 100m, memory: 256Mi }
        limits:   { memory: 384Mi }
      sidecar:
        datasources:
          enabled: true
          defaultDatasourceEnabled: true
          searchNamespace: "observability" 
    prometheus:
      prometheusSpec:
        disableMountSubPath: true
        initContainers:
          - name: fix-perms
            image: busybox:1.36.1
            command:
              - sh
              - -c
              - |
                echo "Before:"; ls -ld /prometheus || true
                chown -R 1000:2000 /prometheus || true
                chmod -R g+rwX /prometheus || true
                echo "After:"; ls -ld /prometheus || true
            securityContext:
              runAsUser: 0                  # root, to chown
              runAsNonRoot: false
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              seccompProfile: { type: RuntimeDefault }
              capabilities:
                drop: ["ALL"]               # satisfy PSS "restricted"
                add: ["CHOWN"]
            volumeMounts:
              - name: prometheus-kube-prometheus-stack-prometheus-db
                mountPath: /prometheus
            # Optional: only needed if some tool writes to /tmp when root FS is RO
            # volumeMounts:
            #   - name: tmp
            #     mountPath: /tmp
        # volumes:
        #   - name: tmp
        #     emptyDir: {}
        podSecurityContext:
          fsGroup: 2000
          fsGroupChangePolicy: OnRootMismatch
          runAsUser: 1000
          runAsGroup: 2000
        retention: 2d
        retentionSize: 2Gi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 2000
          allowPrivilegeEscalation: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-static
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 10Gi
        resources:
          requests:
            cpu: 200m
            memory: 400Mi
          limits:
            memory: 600Mi
